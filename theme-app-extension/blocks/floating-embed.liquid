<script>
  ( () =>
   {
     const fetchCountryData = async ()=>{
      let cookie_location = null;
      const response =await fetch("https://appmixo.in/cdn-cgi/trace", {
        method: 'GET',
        redirect: 'follow'
      })
        .then(response => response.text())
        .then(async(result) => {
          cookie_location = await (result.split('\n').reduce((obj,ele)=>{
            let arr = ele.split("=");
            return {...obj,[arr[0]]:arr[1]} },{}).loc);
            {% comment %} console.log("location api data : ",location); {% endcomment %}
            {% comment %} document.cookie = `location=${loc}`; {% endcomment %}
        })
        .catch((error) => {
            console.log('error', error)
        });
      if(cookie_location)
      {
        {% comment %} console.log("location api outside : ",location) {% endcomment %}
        return cookie_location;
      }else{
        {% comment %} console.log("location api Default" ) {% endcomment %}
        return "location";
      }  
    }
    const CountryCodeFromUrl =async () =>{
        try{
          const searchParams = new URLSearchParams(window.location.search);
          if(searchParams.has("c_code"))
          {
            console.log("got the search", searchParams.get("c_code"))
            setCookie("ams_location",searchParams.get("c_code"),1);
          }else{
            console.log("not got the search", searchParams.get("c_code"))
  
              const cookie_d = document.cookie.split("; ").reduce((obj,ele)=>{
                let arr=ele.split("=");
                return {...obj,[arr[0]]:arr[1] } },{})["ams_location"];
                if(cookie_d && cookie_d.length<8)
                {
                  console.log("cookie true")  
                  console.log("CountryCodeFromUrl : " ,cookie_d);
                  setCookie("ams_location",cookie_d,1);
                }else{
                  console.log("cookie false");
                  const code = await fetchCountryData();
                  console.log("CountryCodeFromUrl : " ,code);
                  setCookie("ams_location",code,1)
  
                }
              {% comment %} console.log("byufsgvggyukgyuk   :  ", cookie_d); {% endcomment %}
          } 
          return (document.cookie.split("; ").reduce((obj,ele)=>{
            let arr=ele.split("=");
            return {...obj,[arr[0]]:arr[1] } },{})["ams_location"]);
        }catch(e) {
            CountryCodeFromUrl();
        }
    }
  
    function setCookie(cname, cvalue, exdays) {
      const d = new Date();
      d.setTime(d.getTime() + (exdays*24*60*60*1000));
      let expires = "expires="+ d.toUTCString();
      document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
    }
    const dynamicContent = async () =>{
         console.log("=======> Rx-shopify", `{{ app.metafields.appmixo_dynamic | json }}`)
            console.log("dynamicContent11");
            const country_content =  getContent();
            console.log("DYNAMIC CONTENT COUNTRY CODE : ",country_content);
            const c_code = await CountryCodeFromUrl();
            console.log("code : ",c_code);
            const  c_data= country_content.find((e)=>{return ((e[0] === c_code))}) 
            let data = null;
  
            if(c_data){
              console.log("Country content : ",c_data);
              data = c_data;
            }else{
              const d_data = country_content.find((e)=>{return ((e[0] === "Default"))}) 
              console.log("Default  content : ",d_data);
              data = d_data;
            }        
            if(data)
            {
                // header content
                const h_color = data[1][0] ? data[1][0][2]:"#fff"
                const header = data[1][0] ? data[1][0][1]:""

                 // header content Display
                if (document.querySelectorAll(".dynamic_header_Drop")[0] && header) {
                  console.log("div conditions true");
                  document.querySelectorAll(".dynamic_header_Drop")[0].innerHTML = `<div  class="dynamic_content_div" style="background-color:${h_color};padding: 1px;">${header}</div>`;
                }else if(document.querySelectorAll("#shopify-section-header")[0] && header){
                  console.log("main div header");
                  document.querySelectorAll("#shopify-section-header")[0].insertAdjacentHTML('afterend',`<div  class="dynamic_content_div" style="background-color:${h_color};padding: 1px;">${header}</div>`);
                }

                 // footer content
                 const f_color = data[1][1] ? data[1][1][2]:"#fff"
                 const footer = data[1][1] ? data[1][1][1]:""
                 
                // footer content Display
                if (document.querySelectorAll(".dynamic_footer_Drop")[0] && footer) {
                  console.log("div conditions true");
                  document.querySelectorAll(".dynamic_footer_Drop")[0].innerHTML = `<div  class="dynamic_content_div" style="background-color:${f_color};padding: 1px;">${footer}</div>`;
                }else if (document.querySelectorAll("#shopify-section-footer")[0] && footer) {
                  console.log("main div footer");
                  document.querySelectorAll("#shopify-section-footer")[0].insertAdjacentHTML('beforebegin',`<div  class="dynamic_content_div" style="background-color:${f_color};padding: 1px;">${footer}</div>`);
                } 

                // products content
                const p_color = data[1][2] ? data[1][2][2]:"#fff"
                const product = data[1][2] ? data[1][2][1]:""

                // products content Display
                if (document.querySelectorAll(".dynamic_products_Drop")[0] && product) {
                  console.log("div products conditions true");
                  document.querySelectorAll(".dynamic_products_Drop")[0].innerHTML = `<div  class="dynamic_content_div" style="background-color:${p_color};">${product}</div>`;
                }else{ 
                  const find_div =await find_product_qty_div();
                  if(find_div){
          
                  find_div.insertAdjacentHTML("beforebegin",`<div class="dynamic_content_div" style="background-color:${p_color};">${product}</div>`)
                }else{
                 console.log("find_div not found") 
                }
              }



                {% comment %} if (document.querySelectorAll(".dynamic_products_Drop")[0] && product) {
                  console.log("div conditions true");
                  document.querySelectorAll(".dynamic_products_Drop")[0].innerHTML = `<div  class="dynamic_content_div" style="background-color:${p_color};">${product}</div>`;
                }else{
                   const theme_data = themeStoreIds[Shopify?.theme?.theme_store_id]
                   console.log("using shopify theme id",Shopify?.theme?.theme_store_id)
                   if(theme_data)
                   {
                      if(document.querySelectorAll(theme_data.selector)[0] && product)
                      {
                          console.log("true",theme_data)
                          document.querySelectorAll(theme_data.selector)[0]?.insertAdjacentHTML(theme_data.insertMethod,`<div class="dynamic_content_div" style="background-color:${p_color};">${product}</div>`);
                      }
                    }
              } {% endcomment %}
          } 
    }
  const find_product_qty_div = async() =>{
    let forms = document.querySelectorAll('form[action*="/cart/add"]:not(.ssw-product-form):not(#add-item-qv), .product-form.unavailable');
    
    if(forms.length > 0) {
        console.log("forms :  ",forms)
        for (let f_element of forms) {
            console.log(`12344556 ================================`,f_element.children)
            for (let chil of f_element.children){
                const ddd = chil.querySelectorAll('[data-shopify="payment-button"].shopify-payment-button, [name="add"]:not(.product__sticky-button), .add-to-cart-btn, input#pre-order[type=submit], .add_to_cart, .add-to-cart, .addToCart, [type="submit"]:not(.product__sticky-button), .product-actions-row, .product-form--button-container, button:not(.minus):not(.plus):not(.adjust-minus):not(.adjust-plus):not(.js-qty__adjust):not(.qty-minus):not(.qty-plus):not(.product__sticky-button):not(.ProductForm__Item), .tt-btn--cart, .cwsCallforPrice'); 
                if(ddd.length != 0)
                {
                    console.log("children element : ",chil)
                    console.log("find div ",ddd)
                    console.log("parentElement",ddd[0].parentElement)
                    //chil.insertAdjacentHTML("beforebegin","<h1>Find</h1>");
                    return chil;
                }
            }
           
        }
    }else{
      console.log("Error")
    }
  }
    const getContent = () =>{
      let ALL_CONTENT = [];
      let vv =null;
      console.time("metafields")
      {% comment %} console.log("06-07-2022 - 2",JSON.stringify(shop.metafields.appmixo_dynamic)); {% endcomment %}
      {% for metafield in shop.metafields.appmixo_dynamic %}
        {% assign variable = 'appmixo_' | append: forloop.index0 %}
        vv= {{ shop.metafields.appmixo_dynamic[ variable ] }} 
        for (const [key, value] of Object.entries(vv)) {
           {% comment %} console.log(` ${key} : ${value[0]} `); {% endcomment %}
           ALL_CONTENT.push([key,value]);
  
        }   
      {% endfor %} 
       console.log("ALL CONTENT : ", ALL_CONTENT);  
      console.timeEnd("metafields")
       return ALL_CONTENT;
    }
    
    document.addEventListener("readystatechange", async() => {
      {% comment %} console.log("Dynamic content11") {% endcomment %}
  
      switch (event.target.readyState) {
        case 'loading':
          console.log("event.target.readystate", event.target.readyState);
  
          break;
  
        case 'interactive':
          console.log("interactive 0.16.0")
          {% comment %} console.time("final") {% endcomment %}
          dynamicContent();
          {% comment %} console.timeEnd("final") {% endcomment %}
          break;
  
        case 'complete':
          break;
      }
    })
} )();
</script>
{% schema %}
{
"name": "Country Wise Content",
"target": "body",
"settings": []
}
{% endschema %}